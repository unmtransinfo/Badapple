#!/usr/bin/env python
#############################################################################
# cpdscaf_2inserts.py
#
# Input: compound file generated by hier_scaffolds with scaffold list for each compound.
# Output: sql inserts to populate scaf2cpd table.
#
# input columns:
#   smiles cid S:scafidlist
#
# Jeremy Yang
# 25 Jul 2012
#############################################################################

import sys,os,re

PROG=os.path.basename(sys.argv[0])

if len(sys.argv)<4:
  print "syntax: %s <SCHEMA> <CPDFILE> <SQLFILE>"%(PROG)
  sys.exit()

schema=sys.argv[1]
fin=file(sys.argv[2])
fout=file(sys.argv[3],"w")

n_lines=0; n_inserts=0;
n_noscaf=0; n_err=0;
while True:
  line=fin.readline()
  if not line: break
  line=line.strip()
  if not line or line[0]=='#': continue
  n_lines+=1
  fields=re.split('\s',line)

  try:
    cid=int(fields[1])
  except:
    print >>sys.stderr, "Bad line (cid): %s"%line
    n_err+=1
    continue

  if len(fields)<3:
    print >>sys.stderr, "no scafs [%d]: CID=%d"%(n_lines,cid)
    n_noscaf+=1
    continue

  if not re.match(r'S:',fields[2]):
    print >>sys.stderr, "Bad line (scafids): %s"%line
    n_err+=1
    continue

  scafids=re.split(',',re.sub('^S:','',fields[2] ))
  if not scafids:
    continue

  for scafid in scafids:
    if not scafid: continue
    try:
      scafid=int(scafid)
    except:
      continue
    fout.write("INSERT INTO %s.scaf2cpd VALUES (%d,%d);\n"%(schema,scafid,cid))
    n_inserts+=1
    

fout.close()
print >>sys.stderr, "%s: input data lines: %d"%(PROG,n_lines)
print >>sys.stderr, "%s: output inserts: %d"%(PROG,n_inserts)
print >>sys.stderr, "%s: cpds w/ no scafs: %d"%(PROG,n_noscaf)
print >>sys.stderr, "%s: errors: %d"%(PROG,n_err)
